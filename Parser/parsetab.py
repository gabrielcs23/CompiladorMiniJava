
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftRPARENleftRW_ELSECOMMENT ID LBRACK LCURLY LPAREN NUMBER OP_AND OP_ATTR OP_DIVISION OP_EQUAL OP_GREATER OP_GREATER_EQ OP_LESSER OP_LESSER_EQ OP_MINUS OP_MULTIPLY OP_NOT OP_NOT_EQUAL OP_PLUS P_COMMA P_POINT P_SEMICOLON RBRACK RCURLY RPAREN RW_BOOLEAN RW_CLASS RW_ELSE RW_EXTENDS RW_FALSE RW_IF RW_INT RW_LENGTH RW_MAIN RW_NEW RW_NULL RW_PUBLIC RW_RETURN RW_SOUT RW_STATIC RW_STRING RW_THIS RW_TRUE RW_VOID RW_WHILE WHITESPACEprog : main classe_rclasse_r : classe_r classe\n                | emptymain : RW_CLASS ID LCURLY RW_PUBLIC RW_STATIC RW_VOID RW_MAIN LPAREN RW_STRING LBRACK RBRACK ID RPAREN LCURLY cmd RCURLY RCURLYclasse : RW_CLASS ID extends_o LCURLY var_r metodo_r RCURLYextends_o    : RW_EXTENDS ID\n                    | emptyvar : tipo ID P_SEMICOLONmetodo : RW_PUBLIC tipo ID LPAREN params_o RPAREN LCURLY var_r cmd_r RW_RETURN exp P_SEMICOLON RCURLYmetodo_r : metodo_r metodo\n                | emptyvar_r    : var_r var\n                | empty cmd_r    : cmd_r cmd\n                | emptyparams : tipo ID tipo_rtipo_r   : tipo_r P_COMMA tipo ID\n                | emptyparams_o : params\n                | emptytipo : RW_INT LBRACK RBRACK\n            | RW_BOOLEAN\n            | RW_INT\n            | IDcmd  : LCURLY cmd_r RCURLY\n            | RW_IF LPAREN exp RPAREN cmd\n            | RW_IF LPAREN exp RPAREN cmd RW_ELSE cmd\n            | RW_WHILE LPAREN exp RPAREN cmd\n            | RW_SOUT LPAREN exp RPAREN P_SEMICOLON\n            | ID OP_ATTR exp P_SEMICOLON\n            | ID LBRACK exp RBRACK OP_ATTR exp P_SEMICOLONexp  : exp OP_AND rexp\n            | rexprexp : rexp OP_LESSER aexp\n            | rexp OP_EQUAL aexp\n            | rexp OP_NOT_EQUAL aexp\n            | aexp aexp : aexp OP_PLUS mexp\n            | aexp OP_MINUS mexp\n            | mexpmexp : mexp OP_MULTIPLY sexp\n            | mexp OP_DIVISION sexp\n            | sexpsexp : OP_NOT sexp\n            | OP_MINUS sexp\n            | RW_TRUE\n            | RW_FALSE\n            | RW_NULL\n            | NUMBER\n            | RW_NEW RW_INT LBRACK exp RBRACK\n            | pexp P_POINT RW_LENGTH\n            | pexp LBRACK exp RBRACK\n            | pexppexp : ID\n            | RW_THIS\n            | RW_NEW ID LPAREN RPAREN\n            | LPAREN exp RPAREN\n            | pexp P_POINT ID\n            | pexp P_POINT ID LPAREN exps_o RPARENexps_o : exps\n            | emptyexps : exp exp_rexp_r : exp_r P_COMMA exp\n             | emptyempty :'
    
_lr_action_items = {'RW_CLASS':([0,2,4,5,7,30,92,],[3,-65,8,-3,-2,-5,-4,]),'$end':([1,2,4,5,7,30,92,],[0,-65,-1,-3,-2,-5,-4,]),'ID':([3,8,13,16,19,20,22,24,26,27,28,32,36,37,38,41,42,44,51,54,56,61,62,63,64,65,66,68,69,70,71,72,78,80,85,88,90,91,97,98,99,100,101,102,103,104,105,106,111,112,115,116,127,133,134,135,136,140,143,150,151,155,],[6,10,17,-65,22,-13,-24,-12,33,-23,-22,22,40,-8,-21,43,22,49,55,-65,-65,22,22,73,73,55,-15,73,73,73,96,55,73,73,110,73,-25,-14,73,-30,73,73,73,73,73,73,73,73,130,73,55,55,73,73,-26,-28,-29,73,55,-31,-27,73,]),'LCURLY':([6,10,12,14,17,20,24,37,48,50,51,54,56,62,65,66,72,90,91,98,115,116,134,135,136,143,150,151,],[9,-65,16,-7,-6,-13,-12,-8,51,54,56,-65,-65,-65,56,-15,56,-25,-14,-30,56,56,-26,-28,-29,56,-31,-27,]),'RW_PUBLIC':([9,16,19,20,23,24,25,31,37,144,],[11,-65,-65,-13,32,-12,-11,-10,-8,-9,]),'RW_EXTENDS':([10,],[13,]),'RW_STATIC':([11,],[15,]),'RW_VOID':([15,],[18,]),'RW_INT':([16,19,20,24,32,37,42,54,61,62,85,],[-65,27,-13,-12,27,-8,27,-65,27,27,109,]),'RW_BOOLEAN':([16,19,20,24,32,37,42,54,61,62,],[-65,28,-13,-12,28,-8,28,-65,28,28,]),'RCURLY':([16,19,20,23,24,25,31,37,56,57,65,66,67,90,91,98,134,135,136,137,144,150,151,],[-65,-65,-13,30,-12,-11,-10,-8,-65,67,90,-15,92,-25,-14,-30,-26,-28,-29,144,-9,-31,-27,]),'RW_MAIN':([18,],[21,]),'RW_RETURN':([20,24,37,54,62,66,72,90,91,98,134,135,136,150,151,],[-13,-12,-8,-65,-65,-15,97,-25,-14,-30,-26,-28,-29,-31,-27,]),'RW_IF':([20,24,37,51,54,56,62,65,66,72,90,91,98,115,116,134,135,136,143,150,151,],[-13,-12,-8,58,-65,-65,-65,58,-15,58,-25,-14,-30,58,58,-26,-28,-29,58,-31,-27,]),'RW_WHILE':([20,24,37,51,54,56,62,65,66,72,90,91,98,115,116,134,135,136,143,150,151,],[-13,-12,-8,59,-65,-65,-65,59,-15,59,-25,-14,-30,59,59,-26,-28,-29,59,-31,-27,]),'RW_SOUT':([20,24,37,51,54,56,62,65,66,72,90,91,98,115,116,134,135,136,143,150,151,],[-13,-12,-8,60,-65,-65,-65,60,-15,60,-25,-14,-30,60,60,-26,-28,-29,60,-31,-27,]),'LPAREN':([21,40,58,59,60,63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,110,112,127,130,133,140,155,],[29,42,68,69,70,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,128,88,88,140,88,88,88,]),'LBRACK':([27,35,55,73,86,87,109,130,132,139,152,],[34,39,64,-54,112,-55,127,-58,-57,-56,-59,]),'RW_STRING':([29,],[35,]),'P_SEMICOLON':([33,73,74,75,76,77,79,81,82,83,84,86,87,107,108,117,118,119,120,121,122,123,124,125,126,129,130,132,139,141,142,145,152,],[37,-54,98,-33,-37,-40,-43,-46,-47,-48,-49,-53,-55,-45,-44,136,137,-32,-34,-35,-36,-38,-39,-41,-42,-51,-58,-57,-56,-52,150,-50,-59,]),'RBRACK':([34,39,73,75,76,77,79,81,82,83,84,86,87,89,107,108,119,120,121,122,123,124,125,126,129,130,131,132,138,139,141,145,152,],[38,41,-54,-33,-37,-40,-43,-46,-47,-48,-49,-53,-55,114,-45,-44,-32,-34,-35,-36,-38,-39,-41,-42,-51,-58,141,-57,145,-56,-52,-50,-59,]),'RPAREN':([42,43,45,46,47,49,52,53,73,75,76,77,79,81,82,83,84,86,87,93,94,95,96,107,108,113,119,120,121,122,123,124,125,126,128,129,130,132,139,140,141,145,146,147,148,149,152,153,154,156,],[-65,48,50,-19,-20,-65,-16,-18,-54,-33,-37,-40,-43,-46,-47,-48,-49,-53,-55,115,116,117,-17,-45,-44,132,-32,-34,-35,-36,-38,-39,-41,-42,139,-51,-58,-57,-56,-65,-52,-50,152,-60,-61,-65,-59,-62,-64,-63,]),'P_COMMA':([49,52,53,73,75,76,77,79,81,82,83,84,86,87,96,107,108,119,120,121,122,123,124,125,126,129,130,132,139,141,145,149,152,153,154,156,],[-65,61,-18,-54,-33,-37,-40,-43,-46,-47,-48,-49,-53,-55,-17,-45,-44,-32,-34,-35,-36,-38,-39,-41,-42,-51,-58,-57,-56,-52,-50,-65,-59,155,-64,-63,]),'OP_ATTR':([55,114,],[63,133,]),'OP_NOT':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'OP_MINUS':([63,64,68,69,70,73,76,77,78,79,80,81,82,83,84,86,87,88,97,99,100,101,102,103,104,105,106,107,108,112,120,121,122,123,124,125,126,127,129,130,132,133,139,140,141,145,152,155,],[78,78,78,78,78,-54,104,-40,78,-43,78,-46,-47,-48,-49,-53,-55,78,78,78,78,78,78,78,78,78,78,-45,-44,78,104,104,104,-38,-39,-41,-42,78,-51,-58,-57,78,-56,78,-52,-50,-59,78,]),'RW_TRUE':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'RW_FALSE':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RW_NULL':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'NUMBER':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'RW_NEW':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'RW_THIS':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'P_POINT':([73,86,87,130,132,139,152,],[-54,111,-55,-58,-57,-56,-59,]),'OP_MULTIPLY':([73,77,79,81,82,83,84,86,87,107,108,123,124,125,126,129,130,132,139,141,145,152,],[-54,105,-43,-46,-47,-48,-49,-53,-55,-45,-44,105,105,-41,-42,-51,-58,-57,-56,-52,-50,-59,]),'OP_DIVISION':([73,77,79,81,82,83,84,86,87,107,108,123,124,125,126,129,130,132,139,141,145,152,],[-54,106,-43,-46,-47,-48,-49,-53,-55,-45,-44,106,106,-41,-42,-51,-58,-57,-56,-52,-50,-59,]),'OP_PLUS':([73,76,77,79,81,82,83,84,86,87,107,108,120,121,122,123,124,125,126,129,130,132,139,141,145,152,],[-54,103,-40,-43,-46,-47,-48,-49,-53,-55,-45,-44,103,103,103,-38,-39,-41,-42,-51,-58,-57,-56,-52,-50,-59,]),'OP_LESSER':([73,75,76,77,79,81,82,83,84,86,87,107,108,119,120,121,122,123,124,125,126,129,130,132,139,141,145,152,],[-54,100,-37,-40,-43,-46,-47,-48,-49,-53,-55,-45,-44,100,-34,-35,-36,-38,-39,-41,-42,-51,-58,-57,-56,-52,-50,-59,]),'OP_EQUAL':([73,75,76,77,79,81,82,83,84,86,87,107,108,119,120,121,122,123,124,125,126,129,130,132,139,141,145,152,],[-54,101,-37,-40,-43,-46,-47,-48,-49,-53,-55,-45,-44,101,-34,-35,-36,-38,-39,-41,-42,-51,-58,-57,-56,-52,-50,-59,]),'OP_NOT_EQUAL':([73,75,76,77,79,81,82,83,84,86,87,107,108,119,120,121,122,123,124,125,126,129,130,132,139,141,145,152,],[-54,102,-37,-40,-43,-46,-47,-48,-49,-53,-55,-45,-44,102,-34,-35,-36,-38,-39,-41,-42,-51,-58,-57,-56,-52,-50,-59,]),'OP_AND':([73,74,75,76,77,79,81,82,83,84,86,87,89,93,94,95,107,108,113,118,119,120,121,122,123,124,125,126,129,130,131,132,138,139,141,142,145,149,152,156,],[-54,99,-33,-37,-40,-43,-46,-47,-48,-49,-53,-55,99,99,99,99,-45,-44,99,99,-32,-34,-35,-36,-38,-39,-41,-42,-51,-58,99,-57,99,-56,-52,99,-50,99,-59,99,]),'RW_ELSE':([90,98,134,135,136,150,151,],[-25,-30,143,-28,-29,-31,-27,]),'RW_LENGTH':([111,],[129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'main':([0,],[2,]),'classe_r':([2,],[4,]),'empty':([2,10,16,19,42,49,54,56,62,140,149,],[5,14,20,25,47,53,20,66,66,148,154,]),'classe':([4,],[7,]),'extends_o':([10,],[12,]),'var_r':([16,54,],[19,62,]),'metodo_r':([19,],[23,]),'var':([19,62,],[24,24,]),'tipo':([19,32,42,61,62,],[26,36,44,71,26,]),'metodo':([23,],[31,]),'params_o':([42,],[45,]),'params':([42,],[46,]),'tipo_r':([49,],[52,]),'cmd':([51,65,72,115,116,143,],[57,91,91,134,135,151,]),'cmd_r':([56,62,],[65,72,]),'exp':([63,64,68,69,70,88,97,112,127,133,140,155,],[74,89,93,94,95,113,118,131,138,142,149,156,]),'rexp':([63,64,68,69,70,88,97,99,112,127,133,140,155,],[75,75,75,75,75,75,75,119,75,75,75,75,75,]),'aexp':([63,64,68,69,70,88,97,99,100,101,102,112,127,133,140,155,],[76,76,76,76,76,76,76,76,120,121,122,76,76,76,76,76,]),'mexp':([63,64,68,69,70,88,97,99,100,101,102,103,104,112,127,133,140,155,],[77,77,77,77,77,77,77,77,77,77,77,123,124,77,77,77,77,77,]),'sexp':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[79,79,79,79,79,107,108,79,79,79,79,79,79,79,79,125,126,79,79,79,79,79,]),'pexp':([63,64,68,69,70,78,80,88,97,99,100,101,102,103,104,105,106,112,127,133,140,155,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'exps_o':([140,],[146,]),'exps':([140,],[147,]),'exp_r':([149,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> main classe_r','prog',2,'p_prog','parser.py',13),
  ('classe_r -> classe_r classe','classe_r',2,'p_classe_r','parser.py',18),
  ('classe_r -> empty','classe_r',1,'p_classe_r','parser.py',19),
  ('main -> RW_CLASS ID LCURLY RW_PUBLIC RW_STATIC RW_VOID RW_MAIN LPAREN RW_STRING LBRACK RBRACK ID RPAREN LCURLY cmd RCURLY RCURLY','main',17,'p_main','parser.py',27),
  ('classe -> RW_CLASS ID extends_o LCURLY var_r metodo_r RCURLY','classe',7,'p_classe','parser.py',31),
  ('extends_o -> RW_EXTENDS ID','extends_o',2,'p_extends_o','parser.py',35),
  ('extends_o -> empty','extends_o',1,'p_extends_o','parser.py',36),
  ('var -> tipo ID P_SEMICOLON','var',3,'p_var','parser.py',43),
  ('metodo -> RW_PUBLIC tipo ID LPAREN params_o RPAREN LCURLY var_r cmd_r RW_RETURN exp P_SEMICOLON RCURLY','metodo',13,'p_metodo','parser.py',48),
  ('metodo_r -> metodo_r metodo','metodo_r',2,'p_metodo_r','parser.py',52),
  ('metodo_r -> empty','metodo_r',1,'p_metodo_r','parser.py',53),
  ('var_r -> var_r var','var_r',2,'p_var_r','parser.py',61),
  ('var_r -> empty','var_r',1,'p_var_r','parser.py',62),
  ('cmd_r -> cmd_r cmd','cmd_r',2,'p_cmd_r','parser.py',70),
  ('cmd_r -> empty','cmd_r',1,'p_cmd_r','parser.py',71),
  ('params -> tipo ID tipo_r','params',3,'p_params','parser.py',79),
  ('tipo_r -> tipo_r P_COMMA tipo ID','tipo_r',4,'p_tipo_r','parser.py',84),
  ('tipo_r -> empty','tipo_r',1,'p_tipo_r','parser.py',85),
  ('params_o -> params','params_o',1,'p_params_o','parser.py',93),
  ('params_o -> empty','params_o',1,'p_params_o','parser.py',94),
  ('tipo -> RW_INT LBRACK RBRACK','tipo',3,'p_tipo','parser.py',99),
  ('tipo -> RW_BOOLEAN','tipo',1,'p_tipo','parser.py',100),
  ('tipo -> RW_INT','tipo',1,'p_tipo','parser.py',101),
  ('tipo -> ID','tipo',1,'p_tipo','parser.py',102),
  ('cmd -> LCURLY cmd_r RCURLY','cmd',3,'p_cmd','parser.py',110),
  ('cmd -> RW_IF LPAREN exp RPAREN cmd','cmd',5,'p_cmd','parser.py',111),
  ('cmd -> RW_IF LPAREN exp RPAREN cmd RW_ELSE cmd','cmd',7,'p_cmd','parser.py',112),
  ('cmd -> RW_WHILE LPAREN exp RPAREN cmd','cmd',5,'p_cmd','parser.py',113),
  ('cmd -> RW_SOUT LPAREN exp RPAREN P_SEMICOLON','cmd',5,'p_cmd','parser.py',114),
  ('cmd -> ID OP_ATTR exp P_SEMICOLON','cmd',4,'p_cmd','parser.py',115),
  ('cmd -> ID LBRACK exp RBRACK OP_ATTR exp P_SEMICOLON','cmd',7,'p_cmd','parser.py',116),
  ('exp -> exp OP_AND rexp','exp',3,'p_exp','parser.py',129),
  ('exp -> rexp','exp',1,'p_exp','parser.py',130),
  ('rexp -> rexp OP_LESSER aexp','rexp',3,'p_rexp','parser.py',138),
  ('rexp -> rexp OP_EQUAL aexp','rexp',3,'p_rexp','parser.py',139),
  ('rexp -> rexp OP_NOT_EQUAL aexp','rexp',3,'p_rexp','parser.py',140),
  ('rexp -> aexp','rexp',1,'p_rexp','parser.py',141),
  ('aexp -> aexp OP_PLUS mexp','aexp',3,'p_aexp','parser.py',149),
  ('aexp -> aexp OP_MINUS mexp','aexp',3,'p_aexp','parser.py',150),
  ('aexp -> mexp','aexp',1,'p_aexp','parser.py',151),
  ('mexp -> mexp OP_MULTIPLY sexp','mexp',3,'p_mexp','parser.py',159),
  ('mexp -> mexp OP_DIVISION sexp','mexp',3,'p_mexp','parser.py',160),
  ('mexp -> sexp','mexp',1,'p_mexp','parser.py',161),
  ('sexp -> OP_NOT sexp','sexp',2,'p_sexp','parser.py',169),
  ('sexp -> OP_MINUS sexp','sexp',2,'p_sexp','parser.py',170),
  ('sexp -> RW_TRUE','sexp',1,'p_sexp','parser.py',171),
  ('sexp -> RW_FALSE','sexp',1,'p_sexp','parser.py',172),
  ('sexp -> RW_NULL','sexp',1,'p_sexp','parser.py',173),
  ('sexp -> NUMBER','sexp',1,'p_sexp','parser.py',174),
  ('sexp -> RW_NEW RW_INT LBRACK exp RBRACK','sexp',5,'p_sexp','parser.py',175),
  ('sexp -> pexp P_POINT RW_LENGTH','sexp',3,'p_sexp','parser.py',176),
  ('sexp -> pexp LBRACK exp RBRACK','sexp',4,'p_sexp','parser.py',177),
  ('sexp -> pexp','sexp',1,'p_sexp','parser.py',178),
  ('pexp -> ID','pexp',1,'p_pexp','parser.py',192),
  ('pexp -> RW_THIS','pexp',1,'p_pexp','parser.py',193),
  ('pexp -> RW_NEW ID LPAREN RPAREN','pexp',4,'p_pexp','parser.py',194),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','parser.py',195),
  ('pexp -> pexp P_POINT ID','pexp',3,'p_pexp','parser.py',196),
  ('pexp -> pexp P_POINT ID LPAREN exps_o RPAREN','pexp',6,'p_pexp','parser.py',197),
  ('exps_o -> exps','exps_o',1,'p_exps_o','parser.py',209),
  ('exps_o -> empty','exps_o',1,'p_exps_o','parser.py',210),
  ('exps -> exp exp_r','exps',2,'p_exps','parser.py',215),
  ('exp_r -> exp_r P_COMMA exp','exp_r',3,'p_exp_r','parser.py',220),
  ('exp_r -> empty','exp_r',1,'p_exp_r','parser.py',221),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',229),
]
