A lista com parênteses representa a árvore de decisão. Cada ( sem aspas representa um novo nível da árvore.

('prog',
('main', 'class', 'Factorial', '{', 'public', 'static', 'void', 'main', '(', 'String', '[', ']', 'a', ')', '{',
('cmd', 'System.out.println', '(',
('exp',
('rexp',
('aexp',
('mexp',
('sexp',
('pexp',
('pexp', 'new', 'Fac', '(', ')'), '.', 'ComputeFac', '(',
('exps_o',
('exps',
('exp',
('rexp',
('aexp',
('mexp',
('sexp', 10))))),
('exp_r', None))), ')')))))), ')', ';'), '}', '}'),


('classe_r',
('classe_r', None),
('classe', 'class', 'Fac',
('extends_o', None), '{',
('var_r', None),
('metodo_r',
('metodo_r', None),
('metodo', 'public',
('tipo', 'int'),
'ComputeFac', '(',
('params_o',
('params',
('tipo', 'int'),
'num',
('tipo_r', None))),
')', '{',
('var_r', ('var_r', None),
('var',
('tipo', 'int'), 'num_aux', ';')),
('cmd_r',
('cmd', 'if', '(',
('exp',
('rexp',
('rexp',
('aexp',
('mexp',
('sexp',
('pexp', 'num'))))), '<', ('aexp',
('mexp', ('sexp', 1))))), ')',
('cmd', 'num_aux', '=',
('exp',
('rexp',
('aexp',
('mexp', ('sexp', 1))))), ';'), 'else',
('cmd', 'num_aux', '=',
('exp',
('rexp',
('aexp',
('mexp',
('mexp',
('sexp',
('pexp', 'num'))), '*',
('sexp',
('pexp', '(',
('exp',
('rexp',
('aexp',
('mexp',
('sexp',
('pexp', ('pexp', 'this'), '.', 'ComputeFac', '(',
('exps_o',
('exps',
('exp',
('rexp',
('aexp',
('aexp',
('mexp',
('sexp',
('pexp', 'num')))), '-',
('mexp', ('sexp', 1))))),
('exp_r', None))), ')')))))), ')')))))), ';')),
('cmd_r', None)), 'return',
('exp',
('rexp',
('aexp',
('mexp',
('sexp',
('pexp', 'num_aux')))))), ';', '}')), '}')))
