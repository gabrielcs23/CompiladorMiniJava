PROG -> MAIN CLASSE_R
CLASSE_R -> CLASSE_R_2
CLASSE_R_2 -> CLASSE CLASSE_R_2 | Ɛ
MAIN -> class id lcurly public static void main lparen String lbrack rbrack id rparen lcurly CMD rcurly rcurly
CLASSE -> class id EXTENDS_O lcurly VAR_R METODO_R rcurly
EXTENDS_O -> extends id | Ɛ
VAR -> TIPO id P_SEMICOLON
METODO -> public TIPO id lparen PARAMS_O rparen lcurly VAR_R CMD_R return EXP P_SEMICOLON rcurly
METODO_R -> METODO_R_2
METODO_R_2 -> METODO METODO_R_2 | Ɛ
VAR_R -> VAR_R_2
VAR_R_2 -> VAR VAR_R_2 | Ɛ
CMD_R -> CMD_R_2
CMD_R_2 -> CMD CMD_R_2 | Ɛ
PARAMS -> TIPO id TIPO_R
TIPO_R -> TIPO_R_2
TIPO_R_2 -> P_COMMA TIPO ID TIPO_R_2| Ɛ
PARAMS_O -> PARAMS | Ɛ
TIPO ->   int lbrack rbrack
        | boolean
        | int
        | id
CMD ->    lcurly CMD_R rcurly
        | if lparen EXP rparen CMD
        | if lparen EXP rparen CMD else CMD
        | while lparen EXP rparen CMD
        | System.out.println lparen EXP rparen P_SEMICOLON
        | id OP_ATTR EXP P_SEMICOLON
        | id lbrack EXP rbrack OP_ATTR EXP P_SEMICOLON
EXP -> REXP EXP_2
EXP_2 -> OP_AND REXP EXP_2 | Ɛ
REXP -> AEXP REXP_2
REXP_2 -> OP_LESSER AEXP REXP_2
        | OP_EQUAL AEXP REXP_2
        | OP_NOT_EQUAL AEXP REXP_2
        | Ɛ
AEXP -> MEXP AEXP_2
AEXP_2 -> OP_PLUS MEXP AEXP_2
        | OP_MINUS MEXP AEXP_2
        | Ɛ
MEXP -> SEXP MEXP_2
MEXP_2 -> OP_MULTIPLY SEXP MEXP_2
        | OP_DIVISION SEXP MEXP_2
        | Ɛ
SEXP ->   OP_NOT SEXP
        | OP_MINUS SEXP
        | true
        | false
        | num
        | null
        | new int lbrack EXP rbrack
        | PEXP P_POINT length
        | PEXP lbrack EXP rbrack
        | PEXP
PEXP ->   id PEXP_2
        | this PEXP_2
        | new id lparen rparen PEXP_2
        | lparen EXP rparen PEXP_2
PEXP_2 -> P_POINT id PEXP_2
        | P_POINT id lparen EXPS_O rparen PEXP_2
        | Ɛ
EXPS -> EXP EXP_R
EXP_R -> EXP_R_2
EXP_R_2 -> P_COMMA EXP EXP_R_2 | Ɛ
EXPS_O -> EXPS | Ɛ